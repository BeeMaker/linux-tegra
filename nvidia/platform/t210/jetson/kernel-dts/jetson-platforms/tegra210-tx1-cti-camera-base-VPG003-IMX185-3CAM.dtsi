/*
 * Copyright (c) 2017, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


#define CAM0_RST_L	TEGRA_GPIO(S, 4)
#define CAM1_RST_L	TEGRA_GPIO(S, 5)
#define CAMERA_I2C_MUX_BUS(x) (0x0B + x)
#define CAMERA_I2C_MUX_BUS2(x) (0x07 + x)

/* camera control gpio definitions */

/ {
	host1x {
		i2c@546c0000 {
			tca9544@70 {
                status = "okay";
				compatible = "nxp,pca9544";
				reg = <0x70>;
				#address-cells = <1>;
				#size-cells = <0>;
				skip_mux_detect = "yes";
				vcc-supply = <&battery_reg>;
				vcc_lp = "vcc";
				force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;

				i2c@0 {
                    status = "okay";
					reg = <0>;
					i2c-mux,deselect-on-exit;
					#address-cells = <1>;
					#size-cells = <0>;
					
					imx185_a@1a {
						/* Define any required hw resources needed by driver */
						/* ie. clocks, io pins, power sources */
						clocks = <&tegra_car TEGRA210_CLK_CLK_OUT_3>;
						clock-names = "clk_out_3";
						clock-frequency = <24000000>;
						mclk = "clk_out_3";
						
						/* imx185 sensor reset gpio from Tegra */
						reset-gpios = <&gpio CAM0_RST_L GPIO_ACTIVE_HIGH>;
						
						vana-supply = <&battery_reg>; 
						vif-supply = <&battery_reg>; 
						vdig-supply = <&battery_reg>; 
					};
                };
                i2c@2 {
                    status = "okay";
                    reg = <2>;
                    i2c-mux,deselect-on-exit;
                    #address-cells = <1>;
                    #size-cells = <0>;
                
                    imx185_c@1a {
                        /* Define any required hw resources needed by driver */
                        /* ie. clocks, io pins, power sources */
                
                        /* imx185 sensor input 24M clock from Tegra */
                        clocks = <&tegra_car TEGRA210_CLK_CLK_OUT_3>;
                        clock-names = "clk_out_3";
                        clock-frequency = <24000000>;
                        mclk = "clk_out_3";
                
                        /* imx185 sensor reset gpio from Tegra */
                        reset-gpios = <&gpio CAM1_RST_L GPIO_ACTIVE_HIGH>;
                
                        /* imx185 sensor board doesn't not get power from Tegra */
                        vana-supply = <&battery_reg>; 
                        vif-supply = <&battery_reg>; 
                        vdig-supply = <&battery_reg>; 
                    };
                };
            };
        };
    };  
};

/ {
    i2c@7000c500 {
        tca9544@71 {
            status = "okay";
            compatible = "nxp,pca9544";
            reg = <0x71>;
            #address-cells = <1>;
            #size-cells = <0>;
            skip_mux_detect = "yes";
            vcc-supply = <&battery_reg>;
            vcc_lp = "vcc";
            force_bus_start = <CAMERA_I2C_MUX_BUS2(0)>;

            i2c@1 {
                status = "okay";
                reg = <1>;
                i2c-mux,deselect-on-exit;
                #address-cells = <1>;
                #size-cells = <0>;
                imx185_e@1a {
                    /* Define any required hw resources needed by driver */
                    /* ie. clocks, io pins, power sources */
                        
                    /* imx185 sensor input 24M clock from Tegra */
                    clocks = <&tegra_car TEGRA210_CLK_CLK_OUT_3>;
                    clock-names = "clk_out_3";
                    clock-frequency = <24000000>;
                    mclk = "clk_out_3";
                        
                    /* imx185 sensor reset gpio from Tegra */
                    reset-gpios = <&gpio CAM0_RST_L GPIO_ACTIVE_HIGH>;
            
                    vana-supply = <&battery_reg>; 
                    vif-supply = <&battery_reg>; 
                    vdig-supply = <&battery_reg>; 
                };
            };
        };  
    };
};
